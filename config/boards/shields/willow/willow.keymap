#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        enter_dance: enter_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "ENTER_DANCE";
            #binding-cells = <0>;
            bindings =
                <&auto_shift_short QUESTION ENTER>,
                <&auto_shift_short LS(ENTER) SLASH>;

            tapping-term-ms = <200>;
        };

        space_tab: space_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACE_TAB";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp TAB>;
        };

        lower_taptoggle: lower_taptoggle {
            compatible = "zmk,behavior-tap-dance";
            label = "LOWER_TAPTOGGLE";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&to 2>;
        };

        bluetooth_tap: bluetooth_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "BLUETOOTH_TAP";
            #binding-cells = <0>;
            bindings =
                <&bt BT_SEL 0>,
                <&bt BT_SEL 1>,
                <&bt BT_SEL 2>,
                <&bt BT_SEL 3>,
                <&bt BT_SEL 4>;
        };

        bootloader_tap: bootloader_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "BOOTLOADER_TAP";
            #binding-cells = <0>;
            bindings = <&none>, <&bootloader>;
        };

        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <150>;
        };

        semi_colon_app_tap: semi_colon_app_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "SEMI_COLON_APP_TAP";
            #binding-cells = <0>;
            bindings =
                <&auto_shift_short LS(SEMI) SEMI>,
                <&auto_shift_short APOSTROPHE APOSTROPHE>;

            tapping-term-ms = <200>;
        };

        control_gui_tap_dance: control_gui_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CONTROL_GUI_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&kp LEFT_GUI>;
        };

        auto_shift_short: auto_shift_short {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT_SHORT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "tap-preferred";
        };

        bt_clear_dance: bt_clear_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CLEAR_DANCE";
            #binding-cells = <0>;
            bindings = <&none>, <&bt BT_CLR>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&auto_shift LS(Q) Q  &auto_shift LS(W) W  &auto_shift LS(E) E     &auto_shift LS(R) R  &auto_shift LS(T) T    &auto_shift LS(Y) Y  &auto_shift LS(U) U  &auto_shift LS(I) I          &auto_shift LS(O) O      &auto_shift LS(P) P
&auto_shift LS(A) A  &auto_shift LS(S) S  &auto_shift LS(D) D     &auto_shift LS(F) F  &auto_shift LS(G) G    &auto_shift LS(H) H  &auto_shift LS(J) J  &auto_shift LS(K) K          &auto_shift LS(L) L      &semi_colon_app_tap
&auto_shift LS(Z) Z  &auto_shift LS(X) X  &auto_shift LS(C) C     &auto_shift LS(V) V  &auto_shift LS(B) B    &auto_shift LS(N) N  &auto_shift LS(M) M  &auto_shift LS(COMMA) COMMA  &auto_shift LS(DOT) DOT  &enter_dance
                                          &control_gui_tap_dance  &lt 1 LEFT_GUI       &kp BACKSPACE          &space_tab           &lower_taptoggle     &kp LEFT_ALT
            >;
        };

        raise_layer {
            bindings = <
&auto_shift TILDE ESCAPE           &kp K_MUTE                         &kp C_VOLUME_DOWN                  &kp C_VOLUME_UP                    &bluetooth_tap           &bt_clear_dance                    &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS                      &auto_shift LS(MINUS) MINUS                  &auto_shift LS(EQUAL) EQUAL
&auto_shift LS(NUMBER_1) NUMBER_1  &auto_shift LS(NUMBER_2) NUMBER_2  &auto_shift LS(NUMBER_3) NUMBER_3  &auto_shift LS(NUMBER_4) NUMBER_4  &auto_shift LS(N5) N5    &auto_shift LS(NUMBER_6) NUMBER_6  &auto_shift LS(N7) N7  &auto_shift LS(N8) N8                      &auto_shift LS(N9) N9                        &auto_shift LS(N0) N0
&kp LEFT_SHIFT                     &trans                             &trans                             &trans                             &bootloader_tap          &kp LEFT_BRACE                     &kp RIGHT_BRACE        &auto_shift LS(LEFT_BRACKET) LEFT_BRACKET  &auto_shift LS(RIGHT_BRACKET) RIGHT_BRACKET  &auto_shift LS(BACKSLASH) BACKSLASH
                                                                      &trans                             &trans                             &kp BACKSPACE            &kp TAB                            &to 3                  &trans
            >;
        };

        lower_layer {
            bindings = <
&trans  &trans    &kp UP_ARROW  &trans     &trans        &bootloader_tap  &auto_shift LS(N7) N7              &auto_shift LS(N8) N8              &auto_shift LS(N9) N9              &trans
&trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans        &trans           &auto_shift LS(NUMBER_4) NUMBER_4  &auto_shift LS(N5) N5              &auto_shift LS(NUMBER_6) NUMBER_6  &trans
&trans  &trans    &trans        &trans     &trans        &trans           &auto_shift LS(NUMBER_1) NUMBER_1  &auto_shift LS(NUMBER_2) NUMBER_2  &auto_shift LS(NUMBER_3) NUMBER_3  &trans
                  &trans        &to 0      &kp DELETE    &kp SPACE        &to 0                              &auto_shift LS(N0) N0
            >;
        };
    };
};
